<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.shop.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.neu.shop.pojo.Goods">
    <id column="goodsId" jdbcType="INTEGER" property="goodsid" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="upTime" jdbcType="TIMESTAMP" property="uptime" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="volume" jdbcType="INTEGER" property="volume" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="category2" jdbcType="INTEGER" property="category2" />
    <result column="detailCate" jdbcType="VARCHAR" property="detailcate" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="activityId" jdbcType="INTEGER" property="activityid" />
  </resultMap>
  <sql id="Base_Column_List">
    goodsId, goodsName, price, num, upTime, score, volume, category, category2, detailCate, 
    description, activityId
  </sql>
  
  <select id="selectByFirstCategory" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where category = #{cateid,jdbcType=INTEGER}
  </select>
  <select id="selectBySecondCategory" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where category2 = #{cateid,jdbcType=INTEGER}
  </select>
  
  <select id="selectMaxId" resultType="java.lang.Integer">
    select 
    max(goodsid)
    from goods
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </select>

  <select id="selectAllGoods" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
  </select>
  
  <select id="selectByRecommend" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where volume in (select max(volume) from goods where category2 = #{value})
  </select>
  
  <select id="selectByKeyword" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goodsName like concat('%',#{value},'%')
  </select>
  
  <select id="selectByVolume" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goodsName like concat('%',#{value},'%')
    order by volume desc
  </select>
  
  <select id="selectByPriceAsc" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goodsName like concat('%',#{value},'%')
    order by price
  </select>
  
  <select id="selectByPriceDesc" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goodsName like concat('%',#{value},'%')
    order by price desc
  </select>
  
  <select id="selectByScore" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goodsName like concat('%',#{value},'%')
    order by score desc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neu.shop.pojo.Goods">
    insert into goods (goodsId, goodsName, price, 
      num, upTime, score, 
      volume, category, category2, 
      detailCate, description, activityId
      )
    values (#{goodsid,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{uptime,jdbcType=TIMESTAMP}, #{score,jdbcType=DOUBLE}, 
      #{volume,jdbcType=INTEGER}, #{category,jdbcType=INTEGER}, #{category2,jdbcType=INTEGER}, 
      #{detailcate,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{activityid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neu.shop.pojo.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="uptime != null">
        upTime,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="volume != null">
        volume,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="category2 != null">
        category2,
      </if>
      <if test="detailcate != null">
        detailCate,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="activityid != null">
        activityId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="uptime != null">
        #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="volume != null">
        #{volume,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="category2 != null">
        #{category2,jdbcType=INTEGER},
      </if>
      <if test="detailcate != null">
        #{detailcate,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="activityid != null">
        #{activityid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.shop.pojo.Goods">
    update goods
    <set>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="uptime != null">
        upTime = #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="volume != null">
        volume = #{volume,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="category2 != null">
        category2 = #{category2,jdbcType=INTEGER},
      </if>
      <if test="detailcate != null">
        detailCate = #{detailcate,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="activityid != null">
        activityId = #{activityid,jdbcType=INTEGER},
      </if>
    </set>
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.shop.pojo.Goods">
    update goods
    set goodsName = #{goodsname,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      upTime = #{uptime,jdbcType=TIMESTAMP},
      score = #{score,jdbcType=DOUBLE},
      volume = #{volume,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      category2 = #{category2,jdbcType=INTEGER},
      detailCate = #{detailcate,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      activityId = #{activityid,jdbcType=INTEGER}
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
</mapper>